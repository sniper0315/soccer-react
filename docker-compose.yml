version: "3"

services:
  api:
    container_name: api
    build:
      context: ./api
      dockerfile: Dockerfile
    labels:
      - "traefik.http.routers.api.rule=Host(`soccerapi.scouting4u.com`)"
      - "traefik.http.routers.api.middlewares=force-https"
      - "traefik.http.routers.api.service=api"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.server.port=3000"

      - "traefik.http.routers.api-secure.rule=Host(`soccerapi.scouting4u.com`)"
      - "traefik.http.routers.api-secure.entrypoints=websecure"
      - "traefik.http.routers.api-secure.service=api-secure"
      - "traefik.http.services.api-secure.loadbalancer.server.port=3000"
      - "traefik.http.routers.api-secure.tls=true"
      - "traefik.http.routers.api-secure.tls.certresolver=letsencrypt"
    volumes:
      - /api/node_modules
      - ./api:/api
    networks:
      - app
    restart: unless-stopped

  app:
    container_name: app
    build:
      context: ./app
      dockerfile: Dockerfile
    labels:
      - "traefik.http.routers.app.rule=Host(`soccer.scouting4u.com`)"
      - "traefik.http.routers.app.middlewares=force-https"
      - "traefik.http.routers.app.service=app"
      - "traefik.http.routers.app.entrypoints=web"
      - "traefik.http.services.app.loadbalancer.server.port=80"

      - "traefik.http.routers.app-secure.rule=Host(`soccer.scouting4u.com`)"
      - "traefik.http.routers.app-secure.entrypoints=websecure"
      - "traefik.http.routers.app-secure.service=app-secure"
      - "traefik.http.services.app-secure.loadbalancer.server.port=80"
      - "traefik.http.routers.app-secure.tls=true"
      - "traefik.http.routers.app-secure.tls.certresolver=letsencrypt"
    networks:
      - app
    restart: unless-stopped

  db_manager:
    container_name: db_manager
    image: dpage/pgadmin4
    labels:
      - "traefik.http.routers.db_manager.rule=Host(`soccerpgadmin.scouting4u.com`)"
      - "traefik.http.routers.db_manager.middlewares=force-https"
      - "traefik.http.routers.db_manager.service=db_manager"
      - "traefik.http.routers.db_manager.entrypoints=web"
      - "traefik.http.services.db_manager.loadbalancer.server.port=80"

      - "traefik.http.routers.db_manager-secure.rule=Host(`soccerpgadmin.scouting4u.com`)"
      - "traefik.http.routers.db_manager-secure.entrypoints=websecure"
      - "traefik.http.routers.db_manager-secure.service=db_manager-secure"
      - "traefik.http.services.db_manager-secure.loadbalancer.server.port=80"
      - "traefik.http.routers.db_manager-secure.tls=true"
      - "traefik.http.routers.db_manager-secure.tls.certresolver=letsencrypt"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - ./db/db_manager:/root/.pgadmin
    networks:
      - app
    restart: unless-stopped

  traefik:
    container_name: traefik
    image: "traefik:v2.0"
    command:
      - "--providers.docker"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=gutt@scouting4u.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
    labels:
      - "traefik.http.middlewares.force-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.force-https.redirectscheme.permanent=true"
    restart: "always"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/traefik/letsencrypt:/letsencrypt

networks:
  app:

